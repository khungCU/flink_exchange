---
  version: '2'
  services:
    zookeeper:
      image: confluentinc/cp-zookeeper:6.1.1
      hostname: zookeeper
      container_name: zookeeper
      ports:
        - "2181:2181"
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
  
    broker:
      image: confluentinc/cp-kafka:6.1.1
      hostname: broker
      container_name: broker
      depends_on:
        - zookeeper
      ports:
        - "29092:29092"
        - "9092:9092"
        - "9101:9101"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        KAFKA_JMX_PORT: 9101
        KAFKA_JMX_HOSTNAME: localhost

    sql-client:
      build: sql-client/.
      command: bin/sql-client.sh
      depends_on:
        - jobmanager
      environment:
        - |
          FLINK_PROPERTIES=
          jobmanager.rpc.address: jobmanager
          rest.address: jobmanager
    jobmanager:
      build: sql-client/.
      ports:
        - "8081:8081"
      command: jobmanager
      volumes:
        - flink_data:/tmp/
      environment:
        - |
          FLINK_PROPERTIES=
          jobmanager.rpc.address: jobmanager
          state.backend: filesystem
          state.checkpoints.dir: file:///tmp/flink-checkpoints
          heartbeat.interval: 1000
          heartbeat.timeout: 5000
          rest.flamegraph.enabled: true
          web.backpressure.refresh-interval: 10000
    taskmanager:
      build: sql-client/.
      depends_on:
        - jobmanager
      command: taskmanager
      volumes:
        - flink_data:/tmp/
      environment:
        - |
          FLINK_PROPERTIES=
          jobmanager.rpc.address: jobmanager
          taskmanager.numberOfTaskSlots: 3
          state.backend: filesystem
          state.checkpoints.dir: file:///tmp/flink-checkpoints
          heartbeat.interval: 1000
          heartbeat.timeout: 5000
    postgres:
    # *-----------------------------*
    # To connect to the DB: 
    #   docker exec -it postgres bash -c 'psql -U $POSTGRES_USER $POSTGRES_DB'
    # *-----------------------------*
      image: debezium/postgres:12
      profiles: ["postgres"]
      container_name: postgres
      volumes:
        # create table
        - $PWD/postgres/tables/orders_postgres.sql:/docker-entrypoint-initdb.d/orders_postgres.sql
      environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      ports:
        - "5432:5432"
  volumes:
    flink_data:

      
  